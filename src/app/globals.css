@import "tailwindcss";
@import "tw-animate-css";
@import "tailwindcss/utilities";
@import "leaflet/dist/leaflet.css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
  
  /* Comprehensive zoom prevention for PWA */
  html {
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    touch-action: manipulation;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
  /* Allow text selection in specific areas where needed */
  input, textarea, [contenteditable="true"], .selectable {
    -webkit-user-select: text;
    -khtml-user-select: text;
    -moz-user-select: text;
    -ms-user-select: text;
    user-select: text;
  }
  
  
  /* Disable double-tap zoom on all elements */
  * {
    touch-action: manipulation;
  }
  
  /* Prevent pinch zoom on the entire document */
  body {
    touch-action: manipulation;
    -webkit-overflow-scrolling: touch;
  }
  
}

.pb-navbar {
  padding-bottom: 6rem; /* 96px - accounts for bottom navbar */
}

.pb-navbar-mobile {
  padding-bottom: 5rem; /* 80px - slightly less on mobile */
}

@media (min-width: 768px) {
  .pb-navbar-mobile {
    padding-bottom: 6rem; /* 96px on larger screens */
  }
}

/* Hide scrollbar utility for horizontal scroll areas */
.no-scrollbar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}
.no-scrollbar::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}

/* Visual viewport support for mobile keyboards */
@supports (height: 100dvh) {
  .drawer-content {
    max-height: 100dvh;
  }
}

/* Prevent viewport changes from affecting fixed elements */
@media (max-width: 768px) {
  /* Ensure fixed elements stay fixed regardless of viewport changes */
  .fixed-navbar, nav[class*="fixed"], header[class*="sticky"] {
    position: fixed !important;
    transform: none !important;
    will-change: auto !important;
  }
  
  /* Prevent viewport height changes from affecting layout */
  html {
    height: 100vh !important;
    height: 100dvh !important;
    overflow-x: hidden !important;
  }
  
  body {
    height: 100vh !important;
    height: 100dvh !important;
    overflow-x: hidden !important;
    /* Prevent body from becoming scrollable when keyboard opens */
    position: relative !important;
  }
}

/* Ensure drawers work properly with visual viewport */
@media (max-width: 768px) {
  .drawer-content {
    /* Use visual viewport height when available */
    max-height: 100vh;
    max-height: 100dvh;
  }
}

/* Immediate keyboard response for drawers */
@media (max-width: 768px) {
  [data-vaul-drawer] {
    /* Use CSS environment variables for immediate response */
    max-height: 100vh;
    max-height: 100dvh;
    /* Prevent initial browser push-up */
    will-change: max-height, transform;
    /* Use CSS custom properties for immediate updates */
    max-height: var(--visual-viewport-height, 100vh);
    /* Smooth height transitions */
    transition: max-height 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
                transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* When keyboard is detected (viewport height reduced), adjust immediately */
  @supports (height: 100dvh) {
    [data-vaul-drawer] {
      max-height: var(--visual-viewport-height, 100dvh);
    }
  }
  
  /* Overlay should also respond immediately with smooth transitions */
  [data-vaul-overlay] {
    /* Only set max-height constraint, don't force positioning */
    max-height: var(--visual-viewport-height, 100vh);
    /* Smooth overlay transitions - only animate height */
    transition: max-height 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Enhanced animations for drawer content */
  [data-vaul-drawer] .drawer-content-inner {
    transition: padding-bottom 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Smooth handle animation */
  [data-vaul-drawer] .mx-auto.mt-4 {
    transition: opacity 0.2s ease-in-out;
  }
  
  /* Enhanced scroll behavior */
  [data-vaul-drawer] .overflow-y-auto {
    scroll-behavior: smooth;
  }
  
  /* Subtle shadow animation */
  [data-vaul-drawer] {
    transition: box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* When keyboard is open, add subtle shadow */
  [data-vaul-drawer][style*="max-height"] {
    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.1);
  }
}

/* Ensure bottom navbar stays absolutely fixed on mobile */
@media (max-width: 1024px) {
  nav[class*="fixed"][class*="bottom-0"] {
    position: fixed !important;
    bottom: 0 !important;
    left: 0 !important;
    right: 0 !important;
    z-index: 50 !important;
    transform: none !important;
  }
}

/* Fix navbar and topbar positioning when keyboard opens on mobile */
@media (max-width: 768px) {
  /* Ensure topbar stays fixed */
  header[class*="sticky"] {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    z-index: 30 !important;
    transform: none !important;
  }
  
  /* Ensure bottom navbar stays fixed */
  nav[class*="fixed"][class*="bottom-0"] {
    position: fixed !important;
    bottom: 0 !important;
    left: 0 !important;
    right: 0 !important;
    z-index: 50 !important;
    transform: none !important;
  }
  
  /* Ensure main content area accounts for fixed headers */
  main {
    margin-top: 56px !important; /* Account for topbar height */
    margin-bottom: 80px !important; /* Account for bottom navbar height */
  }
}

/* Leaflet Map Styling */
.leaflet-container {
  background-color: var(--background) !important;
  color: var(--foreground) !important;
}

/* Dark theme for map tiles */
.dark .leaflet-tile {
  filter: brightness(0.6) invert(1) contrast(3) hue-rotate(200deg) saturate(0.3) brightness(0.7);
}

/* Custom marker styling */
.custom-marker {
  background: none !important;
  border: none !important;
}

.marker-container {
  transition: all 0.2s ease;
}

.marker-container:hover {
  transform: translate(-50%, -50%) scale(1.1);
}

.marker-container.selected {
  transform: translate(-50%, -50%) scale(1.2);
  box-shadow: 0 4px 12px rgba(0,0,0,0.4);
}

/* Leaflet popup styling to match shadcn/ui */
.leaflet-popup-content-wrapper {
  background-color: var(--card) !important;
  color: var(--card-foreground) !important;
  border: 1px solid var(--border) !important;
  border-radius: 0.5rem !important;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05) !important;
}

.leaflet-popup-tip {
  background-color: var(--card) !important;
  border: 1px solid var(--border) !important;
}

.leaflet-popup-close-button {
  color: var(--muted-foreground) !important;
}

.leaflet-popup-close-button:hover {
  color: var(--foreground) !important;
}

/* Leaflet control styling */
.leaflet-control-zoom a {
  background-color: var(--card) !important;
  color: var(--card-foreground) !important;
  border: 1px solid var(--border) !important;
}

.leaflet-control-zoom a:hover {
  background-color: var(--accent) !important;
  color: var(--accent-foreground) !important;
}
